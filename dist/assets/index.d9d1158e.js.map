{"version":3,"file":"index.d9d1158e.js","sources":["../../vite/modulepreload-polyfill","../../main.js"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import 'ol/ol.css';\nimport ImageLayer from 'ol/layer/Image';\nimport Map from 'ol/Map';\nimport Projection from 'ol/proj/Projection';\nimport Static from 'ol/source/ImageStatic';\nimport View from 'ol/View';\nimport {getCenter} from 'ol/extent';\n\nfunction dynamicMap (url) {\n  \n  const imageLayer = new ImageLayer();\n  const imageView = new View();\n  const img = document.createElement('img');\n  img.onload = function() {\n    const extent = [0, 0, img.width, img.height];\n    const projection = {\n      code: \"xkcd-image\" + url,\n      units: \"pixels\",\n      extent: extent,\n    }\n    imageLayer.setSource(\n      new Static({\n        url: url,\n        projection: new Projection(projection),\n        imageExtent: extent,\n      }),\n    );\n    imageView.setProperties({\n      projection: projection,\n      center: getCenter(extent),\n      zoom: 2\n    })\n  \n  };\n  img.src = url;\n  const map = new Map({\n    layers: [imageLayer],\n    target: 'map',\n    view: imageView\n  });\n  return map;\n}\n\nvar map = new Map(dynamicMap(\"https://upload.wikimedia.org/wikipedia/commons/a/aa/Simple_shapes_example.png\"));\n\n"],"names":[],"mappings":"4EAAA,KAAM,GAAI,UAAoB,CAC1B,KAAM,GAAU,SAAS,cAAc,QAAQ,QAC/C,GAAI,GAAW,EAAQ,UAAY,EAAQ,SAAS,iBAChD,OAEJ,SAAW,KAAQ,UAAS,iBAAiB,6BACzC,EAAe,GAEnB,GAAI,kBAAiB,AAAC,GAAc,CAChC,SAAW,KAAY,GACnB,GAAI,EAAS,OAAS,YAGtB,SAAW,KAAQ,GAAS,WACxB,AAAI,EAAK,UAAY,QAAU,EAAK,MAAQ,iBACxC,EAAe,KAG5B,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,KACjD,WAAsB,EAAQ,CAC1B,KAAM,GAAY,GAClB,MAAI,GAAO,WACP,GAAU,UAAY,EAAO,WAC7B,EAAO,gBACP,GAAU,eAAiB,EAAO,gBACtC,AAAI,EAAO,cAAgB,kBACvB,EAAU,YAAc,UACvB,AAAI,EAAO,cAAgB,YAC5B,EAAU,YAAc,OAExB,EAAU,YAAc,cACrB,EAEX,WAAwB,EAAM,CAC1B,GAAI,EAAK,GAEL,OACJ,EAAK,GAAK,GAEV,KAAM,GAAY,EAAa,GAC/B,MAAM,EAAK,KAAM,KAEvB,AAAoB,IClCtB,WAAqB,EAAK,CAExB,KAAM,GAAa,GAAI,GACjB,EAAY,GAAI,GAChB,EAAM,SAAS,cAAc,OACnC,SAAI,OAAS,UAAW,CACtB,KAAM,GAAS,CAAC,EAAG,EAAG,EAAI,MAAO,EAAI,QAC/B,EAAa,CACjB,KAAM,aAAe,EACrB,MAAO,SACP,OAAQ,GAEV,EAAW,UACT,GAAI,GAAO,CACT,IAAK,EACL,WAAY,GAAI,GAAW,GAC3B,YAAa,KAGjB,EAAU,cAAc,CACtB,WAAY,EACZ,OAAQ,EAAU,GAClB,KAAM,KAIV,EAAI,IAAM,EACE,GAAI,GAAI,CAClB,OAAQ,CAAC,GACT,OAAQ,MACR,KAAM,IAKA,GAAI,GAAI,EAAW"}